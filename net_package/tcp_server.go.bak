////////////////////////////////////////////////////////
//  this is the non-Goroutine version of server.
// it cannot handle multiple client case, a more elegant
// way is to use goroutine as in tcp_server.go
////////////////////////////////////////////////////////

package main

import (
    "fmt"
    "net"
    "os"
    "time"
)

func main() {
    service := ":7777"
    tcpAddr, err := net.ResolveTCPAddr("tcp4", service)
    checkErr(err)
    listener, err := net.ListenTCP("tcp4", tcpAddr)
    checkErr(err)
    for {
        conn, err := listener.Accept()
        if err != nil {
            continue
        }
        conn.Write([]byte(time.Now().String()))
        conn.Close()
    }
}

func checkErr(err error) {
    if err != nil {
        fmt.Println("Fatal error: ", err.Error())
        os.Exit(0)
    }
}
